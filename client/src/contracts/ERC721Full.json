{
  "contractName": "ERC721Full",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-721\\r\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID\\r The zero address indicates there is no approved address.\\r There can only be one approved address per token at a given time.\\r Can only be called by the token owner or an approved operator.\\r\",\"params\":{\"to\":\"address to be approved for the given token ID\\r\",\"tokenId\":\"uint256 ID of the token to be approved\\r\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\\r\",\"params\":{\"owner\":\"address to query the balance of\\r\"},\"return\":\"uint256 representing the amount owned by the passed address\\r\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set\\r Reverts if the token ID does not exist.\\r\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\\r\"},\"return\":\"address currently approved for the given token ID\\r\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\\r\",\"params\":{\"operator\":\"operator address which you want to query the approval of\\r\",\"owner\":\"owner address which you want to query the approval of\\r\"},\"return\":\"bool whether the given operator is approved by the given owner\\r\"},\"name()\":{\"details\":\"Gets the token name\\r\",\"return\":\"string representing the token name\\r\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\\r\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\\r\"},\"return\":\"address currently marked as the owner of the given token ID\\r\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address\\r If the target address is a contract, it must implement `onERC721Received`,\\r which is called upon a safe transfer, and return the magic value\\r `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise,\\r the transfer is reverted.\\r Requires the msg.sender to be the owner, approved, or operator\\r\",\"params\":{\"from\":\"current owner of the token\\r\",\"to\":\"address to receive the ownership of the given token ID\\r\",\"tokenId\":\"uint256 ID of the token to be transferred\\r\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address\\r If the target address is a contract, it must implement `onERC721Received`,\\r which is called upon a safe transfer, and return the magic value\\r `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise,\\r the transfer is reverted.\\r Requires the msg.sender to be the owner, approved, or operator\\r\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\\r\",\"from\":\"current owner of the token\\r\",\"to\":\"address to receive the ownership of the given token ID\\r\",\"tokenId\":\"uint256 ID of the token to be transferred\\r\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator\\r An operator is allowed to transfer all tokens of the sender on their behalf\\r\",\"params\":{\"approved\":\"representing the status of the approval to be set\\r\",\"to\":\"operator address to set the approval\\r\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\\r\"},\"symbol()\":{\"details\":\"Gets the token symbol\\r\",\"return\":\"string representing the token symbol\\r\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract\\r Reverts if the index is greater or equal to the total number of tokens\\r\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\\r\"},\"return\":\"uint256 token ID at the given index of the tokens list\\r\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\\r\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\\r\",\"owner\":\"address owning the tokens list to be accessed\\r\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\\r\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID\\r Throws if the token ID does not exist. May return an empty string.\\r\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\\r\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\\r\",\"return\":\"uint256 representing the total amount of tokens\\r\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address\\r Usage of this method is discouraged, use `safeTransferFrom` whenever possible\\r Requires the msg.sender to be the owner, approved, or operator\\r\",\"params\":{\"from\":\"current owner of the token\\r\",\"to\":\"address to receive the ownership of the given token ID\\r\",\"tokenId\":\"uint256 ID of the token to be transferred\\r\"}}},\"title\":\"Full ERC721 Token\\r This implementation includes all the required and some optional functionality of the ERC721 standard\\r Moreover, it includes approve all functionality using operator terminology\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":\"ERC721Full\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5f12eb78ae16ca9e84146dace1de6d518eac2960ceb722d61af8c8d3495c4833\",\"urls\":[\"bzzr://5254651ac0490681a0a00fc40eb91d28b36f7be0e0d612479e6f3c9aa75da87b\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x7b999810a91e7140a6f100e34d57f4e81c3826ecc7aed96dc540204c6e1034a9\",\"urls\":[\"bzzr://c9dbb6b12105a4854d5a7994433e3c8986a8ace27549d57f3c1f9b5532f4960c\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x6bcaba13478ee7fc3cd7ee928a9cf0e9e73ac8c70b4ba2b566642f091e2b3339\",\"urls\":[\"bzzr://9697616d8c942d5a4193939a502e9b86dfdca1fbe7c54c82d1637d4e85140a1e\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa6047eb9153e917dfca34a47baa3b40c348ea2e01df39dc410c9189d1ea5ce71\",\"urls\":[\"bzzr://be96646f86fdb612d8c852ccb2e80299838f050105378456f72e91488fe9c9aa\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1c882f9c82b8b1e5b24cca6f847346677102c6b068710f59bc7f6fae7607725d\",\"urls\":[\"bzzr://d17cd6f3374b879f5b0f0ffb0b24e19c7a5dc65cc1d0192eac12fd69b1544f5d\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x9f932ced451dd6691ccc7932e823935d64a1ff37f6cd65bce6b546b460290061\",\"urls\":[\"bzzr://8f7a613059983cda3cf4c93edf7426a09003c6cad95e7e0d11d8fdcc01701b18\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0xc5359dc178afcc4f39f183f1dfcb62606bb2c253f5ab851bdba23940424ed542\",\"urls\":[\"bzzr://f3d0c44530d521a50e5d010fb1899cfaa8d3684af5bba6ce34bd98b8be755b2f\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x08d2602c353fc65ef9c370a3b30497e041d0bc02d84d0c139c2513a5b290190a\",\"urls\":[\"bzzr://cf12b6ebc5951598b4dba73961008470940a0929f0d14bb97cadc7c70afbd113\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x935cdef4d38f37d8e3d48cc5f3a847abaf5bd241fcda6e2a3b4146fb159a3ccb\",\"urls\":[\"bzzr://4aa28ef46cf7e7163bd4187732048c4f876c72c9340b10a39df5983422d47030\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xef1a2fe16448141003ad1603b99746059e00eeda06427cb0478e4f8222e28d36\",\"urls\":[\"bzzr://7055cf815d2efba70dce4682c3d0c79036c3a444b560743b734551e3480d40fc\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x971f210f5422ded848e32749f7040619d791b79220b5f277003f7516b5473d3d\",\"urls\":[\"bzzr://16e1ff24dd1ea5c7fab05ae42a673884e670c0c5fa405f44c5aa8b232f2a44ef\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xf6b66a81c58de17bf46a381c02c76d4ed4430a389d0918df5accfeda7e6c39fb\",\"urls\":[\"bzzr://b5e46203aefd4ac67478540f75d4bd619a2970e4947903f8b19b3cc536a6aa89\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x7109ff0b2a990942e13e862a999894d1e35c012eda3dc34a5490a9218ddf102c\",\"urls\":[\"bzzr://b3298721c6e41cdc043609ed44b306a3ca9920a06646cb223c828a51d4998752\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "402:231:6:-;;;473:157;8:9:-1;5:2;;;30:1;27;20:12;5:2;473:157:6;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;473:157:6;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;473:157:6;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;473:157:6;;;;;;550:4;556:6;665:40:1;246:10;684:20;;665:18;;;:40;;;:::i;:::-;2028::4;1269:10;2047:20;;2028:18;;;:40;;;:::i;:::-;1271:51:5;864:10;1290:31;;1271:18;;;:51;;;:::i;:::-;781:4:7;773:5;:12;;;;;;;;;;;;:::i;:::-;;806:6;796:7;:16;;;;;;;;;;;;:::i;:::-;;903:49;452:10;922:29;;903:18;;;:49;;;:::i;:::-;700:260;;473:157:6;;402:231;;1028:161:1;1119:10;1104:25;;:11;:25;;;;;1096:34;;;;;;;;1177:4;1141:20;:33;1162:11;1141:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1028:161;:::o;402:231:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "402:231:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;402:231:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:135:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;809:135:1;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1070:85:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1070:85:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3878:154:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3878:154:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3286:299;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3286:299:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2054:96:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5469:184:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5469:184:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1711:185:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1711:185:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6299:134:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6299:134:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2495:151:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2495:151:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2674:181:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2674:181:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2286:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2286:163:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1269:89:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1269:89:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4332:217:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4332:217:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7152:214;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7152:214:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7152:214:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7152:214:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7152:214:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7152:214:4;;;;;;;;;;;;;;;:::i;:::-;;1564:154:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1564:154:7;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1564:154:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4878:147:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4878:147:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;809:135:1;879:4;903:20;:33;924:11;903:33;;;;;;;;;;;;;;;;;;;;;;;;;;;896:40;;809:135;;;:::o;1070:85:7:-;1109:13;1142:5;1135:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1070:85;:::o;3878:154:4:-;3937:7;3965:16;3973:7;3965;:16::i;:::-;3957:25;;;;;;;;4000:15;:24;4016:7;4000:24;;;;;;;;;;;;;;;;;;;;;3993:31;;3878:154;;;:::o;3286:299::-;3350:13;3366:16;3374:7;3366;:16::i;:::-;3350:32;;3407:5;3401:11;;:2;:11;;;;3393:20;;;;;;;;3446:5;3432:19;;:10;:19;;;:58;;;;3455:35;3472:5;3479:10;3455:16;:35::i;:::-;3432:58;3424:67;;;;;;;;3531:2;3504:15;:24;3520:7;3504:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3569:7;3565:2;3549:28;;3558:5;3549:28;;;;;;;;;;;;3286:299;;;:::o;2054:96:5:-;2098:7;2125:10;:17;;;;2118:24;;2054:96;:::o;5469:184:4:-;5560:39;5579:10;5591:7;5560:18;:39::i;:::-;5552:48;;;;;;;;5613:32;5627:4;5633:2;5637:7;5613:13;:32::i;:::-;5469:184;;;:::o;1711:185:5:-;1791:7;1827:16;1837:5;1827:9;:16::i;:::-;1819:5;:24;1811:33;;;;;;;;1862:12;:19;1875:5;1862:19;;;;;;;;;;;;;;;1882:5;1862:26;;;;;;;;;;;;;;;;;;1855:33;;1711:185;;;;:::o;6299:134:4:-;6386:39;6403:4;6409:2;6413:7;6386:39;;;;;;;;;;;;;:16;:39::i;:::-;6299:134;;;:::o;2495:151:5:-;2553:7;2589:13;:11;:13::i;:::-;2581:5;:21;2573:30;;;;;;;;2621:10;2632:5;2621:17;;;;;;;;;;;;;;;;;;2614:24;;2495:151;;;:::o;2674:181:4:-;2729:7;2749:13;2765:11;:20;2777:7;2765:20;;;;;;;;;;;;;;;;;;;;;2749:36;;2821:1;2804:19;;:5;:19;;;;2796:28;;;;;;;;2842:5;2835:12;;;2674:181;;;:::o;2286:163::-;2341:7;2386:1;2369:19;;:5;:19;;;;2361:28;;;;;;;;2407:34;:17;:24;2425:5;2407:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2400:41;;2286:163;;;:::o;1269:89:7:-;1310:13;1343:7;1336:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:89;:::o;4332:217:4:-;4418:10;4412:16;;:2;:16;;;;4404:25;;;;;;;;4477:8;4440:18;:30;4459:10;4440:30;;;;;;;;;;;;;;;:34;4471:2;4440:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4528:2;4501:40;;4516:10;4501:40;;;4532:8;4501:40;;;;;;;;;;;;;;;;;;;;;;4332:217;;:::o;7152:214::-;7259:31;7272:4;7278:2;7282:7;7259:12;:31::i;:::-;7309:48;7332:4;7338:2;7342:7;7351:5;7309:22;:48::i;:::-;7301:57;;;;;;;;7152:214;;;;:::o;1564:154:7:-;1622:13;1656:16;1664:7;1656;:16::i;:::-;1648:25;;;;;;;;1691:10;:19;1702:7;1691:19;;;;;;;;;;;1684:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1564:154;;;:::o;4878:147:4:-;4958:4;4982:18;:25;5001:5;4982:25;;;;;;;;;;;;;;;:35;5008:8;4982:35;;;;;;;;;;;;;;;;;;;;;;;;;4975:42;;4878:147;;;;:::o;7567:155::-;7624:4;7641:13;7657:11;:20;7669:7;7657:20;;;;;;;;;;;;;;;;;;;;;7641:36;;7712:1;7695:19;;:5;:19;;;;7688:26;;;7567:155;;;:::o;8091:249::-;8176:4;8193:13;8209:16;8217:7;8209;:16::i;:::-;8193:32;;8255:5;8244:16;;:7;:16;;;:51;;;;8288:7;8264:31;;:20;8276:7;8264:11;:20::i;:::-;:31;;;8244:51;:87;;;;8299:32;8316:5;8323:7;8299:16;:32::i;:::-;8244:87;8236:96;;;8091:249;;;;:::o;3030:245:5:-;3116:38;3136:4;3142:2;3146:7;3116:19;:38::i;:::-;3167:47;3200:4;3206:7;3167:32;:47::i;:::-;3227:40;3255:2;3259:7;3227:27;:40::i;:::-;3030:245;;;:::o;1087:114:0:-;1152:7;1179;:14;;;1172:21;;1087:114;;;:::o;11007:356:4:-;11129:4;11156:15;:2;:13;;;:15::i;:::-;11155:16;11151:60;;;11195:4;11188:11;;;;11151:60;11223:13;11255:2;11239:36;;;11276:10;11288:4;11294:7;11303:5;11239:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11239:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11239:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11239:70:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11239:70:4;;;;;;;;;;;;;;;;11223:86;;741:10;11338:16;;11328:26;;;:6;:26;;;;11320:35;;;11007:356;;;;;;;:::o;10094:374::-;10208:4;10188:24;;:16;10196:7;10188;:16::i;:::-;:24;;;10180:33;;;;;;;;10246:1;10232:16;;:2;:16;;;;10224:25;;;;;;;;10262:23;10277:7;10262:14;:23::i;:::-;10298:35;:17;:23;10316:4;10298:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10344:33;:17;:21;10362:2;10344:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10413:2;10390:11;:20;10402:7;10390:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10452:7;10448:2;10433:27;;10442:4;10433:27;;;;;;;;;;;;10094:374;;;:::o;6207:1148:5:-;6473:22;6498:32;6528:1;6498:12;:18;6511:4;6498:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6473:57;;6541:18;6562:17;:26;6580:7;6562:26;;;;;;;;;;;;6541:47;;6709:14;6695:10;:28;;6691:328;;;6740:19;6762:12;:18;6775:4;6762:18;;;;;;;;;;;;;;;6781:14;6762:34;;;;;;;;;;;;;;;;;;6740:56;;6846:11;6813:12;:18;6826:4;6813:18;;;;;;;;;;;;;;;6832:10;6813:30;;;;;;;;;;;;;;;;;:44;;;;6963:10;6930:17;:30;6948:11;6930:30;;;;;;;;;;;:43;;;;6691:328;;7108:12;:18;7121:4;7108:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6207:1148;;;;:::o;5031:186::-;5145:12;:16;5158:2;5145:16;;;;;;;;;;;;;;;:23;;;;5116:17;:26;5134:7;5116:26;;;;;;;;;;;:52;;;;5179:12;:16;5192:2;5179:16;;;;;;;;;;;;;;;5201:7;5179:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5179:30:5;;;;;;;;;;;;;;;;;;;;;;5031:186;;:::o;476:627:12:-;536:4;553:12;1060:7;1048:20;1040:28;;1094:1;1087:4;:8;1080:15;;;476:627;;;:::o;11530:175:4:-;11630:1;11594:38;;:15;:24;11610:7;11594:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11590:108;;;11684:1;11649:15;:24;11665:7;11649:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11590:108;11530:175;:::o;1308:110:0:-;1389:21;1408:1;1389:7;:14;;;:18;;:21;;;;:::i;:::-;1372:7;:14;;:38;;;;1308:110;:::o;1209:91::-;1291:1;1273:7;:14;;;:19;;;;;;;;;;;1209:91;:::o;1250:150:3:-;1308:7;1341:1;1336;:6;;1328:15;;;;;;;;1354:9;1370:1;1366;:5;1354:17;;1391:1;1384:8;;;1250:150;;;;:::o;402:231:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >0.4.22 <0.9.0;\r\n\r\nimport \"./ERC721.sol\";\r\nimport \"./ERC721Enumerable.sol\";\r\nimport \"./ERC721Metadata.sol\";\r\n\r\n/**\r\n * @title Full ERC721 Token\r\n * This implementation includes all the required and some optional functionality of the ERC721 standard\r\n * Moreover, it includes approve all functionality using operator terminology\r\n * @dev see https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ncontract ERC721Full is ERC721, ERC721Enumerable, ERC721Metadata {\r\n    constructor (string memory name, string memory symbol) public ERC721Metadata(name, symbol) {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n}\r\n",
  "sourcePath": "@openzeppelin\\contracts\\token\\ERC721\\ERC721Full.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        1141
      ]
    },
    "id": 1142,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1119,
        "literals": [
          "solidity",
          ">",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 1120,
        "nodeType": "ImportDirective",
        "scope": 1142,
        "sourceUnit": 783,
        "src": "35:22:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 1121,
        "nodeType": "ImportDirective",
        "scope": 1142,
        "sourceUnit": 1118,
        "src": "59:32:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 1122,
        "nodeType": "ImportDirective",
        "scope": 1142,
        "sourceUnit": 1269,
        "src": "93:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1123,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 782,
              "src": "425:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$782",
                "typeString": "contract ERC721"
              }
            },
            "id": 1124,
            "nodeType": "InheritanceSpecifier",
            "src": "425:6:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1125,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1117,
              "src": "433:16:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1117",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 1126,
            "nodeType": "InheritanceSpecifier",
            "src": "433:16:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1127,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1268,
              "src": "451:14:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$1268",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 1128,
            "nodeType": "InheritanceSpecifier",
            "src": "451:14:6"
          }
        ],
        "contractDependencies": [
          99,
          109,
          782,
          1117,
          1268,
          1371,
          1398,
          1421
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\r\nThis implementation includes all the required and some optional functionality of the ERC721 standard\r\nMoreover, it includes approve all functionality using operator terminology\r\n@dev see https://eips.ethereum.org/EIPS/eip-721\r",
        "fullyImplemented": true,
        "id": 1141,
        "linearizedBaseContracts": [
          1141,
          1268,
          1421,
          1117,
          1398,
          782,
          1371,
          99,
          109
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1139,
              "nodeType": "Block",
              "src": "564:66:6",
              "statements": []
            },
            "documentation": null,
            "id": 1140,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1135,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1130,
                    "src": "550:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1136,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1132,
                    "src": "556:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1137,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1134,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1268,
                  "src": "535:14:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1268_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "535:28:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1140,
                  "src": "486:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1140,
                  "src": "506:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "485:42:6"
            },
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "564:0:6"
            },
            "scope": 1141,
            "src": "473:157:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1142,
        "src": "402:231:6"
      }
    ],
    "src": "0:635:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
      "exportedSymbols": {
        "ERC721Full": [
          1141
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 1119,
        "name": "PragmaDirective",
        "src": "0:31:6"
      },
      {
        "attributes": {
          "SourceUnit": 783,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
          "file": "./ERC721.sol",
          "scope": 1142,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1120,
        "name": "ImportDirective",
        "src": "35:22:6"
      },
      {
        "attributes": {
          "SourceUnit": 1118,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol",
          "file": "./ERC721Enumerable.sol",
          "scope": 1142,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1121,
        "name": "ImportDirective",
        "src": "59:32:6"
      },
      {
        "attributes": {
          "SourceUnit": 1269,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol",
          "file": "./ERC721Metadata.sol",
          "scope": 1142,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1122,
        "name": "ImportDirective",
        "src": "93:30:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            99,
            109,
            782,
            1117,
            1268,
            1371,
            1398,
            1421
          ],
          "contractKind": "contract",
          "documentation": "@title Full ERC721 Token\r\nThis implementation includes all the required and some optional functionality of the ERC721 standard\r\nMoreover, it includes approve all functionality using operator terminology\r\n@dev see https://eips.ethereum.org/EIPS/eip-721\r",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1141,
            1268,
            1421,
            1117,
            1398,
            782,
            1371,
            99,
            109
          ],
          "name": "ERC721Full",
          "scope": 1142
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721",
                  "referencedDeclaration": 782,
                  "type": "contract ERC721"
                },
                "id": 1123,
                "name": "UserDefinedTypeName",
                "src": "425:6:6"
              }
            ],
            "id": 1124,
            "name": "InheritanceSpecifier",
            "src": "425:6:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Enumerable",
                  "referencedDeclaration": 1117,
                  "type": "contract ERC721Enumerable"
                },
                "id": 1125,
                "name": "UserDefinedTypeName",
                "src": "433:16:6"
              }
            ],
            "id": 1126,
            "name": "InheritanceSpecifier",
            "src": "433:16:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Metadata",
                  "referencedDeclaration": 1268,
                  "type": "contract ERC721Metadata"
                },
                "id": 1127,
                "name": "UserDefinedTypeName",
                "src": "451:14:6"
              }
            ],
            "id": 1128,
            "name": "InheritanceSpecifier",
            "src": "451:14:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1141,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 1140,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1129,
                        "name": "ElementaryTypeName",
                        "src": "486:6:6"
                      }
                    ],
                    "id": 1130,
                    "name": "VariableDeclaration",
                    "src": "486:18:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 1140,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1131,
                        "name": "ElementaryTypeName",
                        "src": "506:6:6"
                      }
                    ],
                    "id": 1132,
                    "name": "VariableDeclaration",
                    "src": "506:20:6"
                  }
                ],
                "id": 1133,
                "name": "ParameterList",
                "src": "485:42:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1138,
                "name": "ParameterList",
                "src": "564:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1268,
                      "type": "type(contract ERC721Metadata)",
                      "value": "ERC721Metadata"
                    },
                    "id": 1134,
                    "name": "Identifier",
                    "src": "535:14:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1130,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 1135,
                    "name": "Identifier",
                    "src": "550:4:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1132,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 1136,
                    "name": "Identifier",
                    "src": "556:6:6"
                  }
                ],
                "id": 1137,
                "name": "ModifierInvocation",
                "src": "535:28:6"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1139,
                "name": "Block",
                "src": "564:66:6"
              }
            ],
            "id": 1140,
            "name": "FunctionDefinition",
            "src": "473:157:6"
          }
        ],
        "id": 1141,
        "name": "ContractDefinition",
        "src": "402:231:6"
      }
    ],
    "id": 1142,
    "name": "SourceUnit",
    "src": "0:635:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2021-12-21T09:14:25.741Z",
  "devdoc": {
    "details": "see https://eips.ethereum.org/EIPS/eip-721\r",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID\r The zero address indicates there is no approved address.\r There can only be one approved address per token at a given time.\r Can only be called by the token owner or an approved operator.\r",
        "params": {
          "to": "address to be approved for the given token ID\r",
          "tokenId": "uint256 ID of the token to be approved\r"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address\r",
        "params": {
          "owner": "address to query the balance of\r"
        },
        "return": "uint256 representing the amount owned by the passed address\r"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set\r Reverts if the token ID does not exist.\r",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of\r"
        },
        "return": "address currently approved for the given token ID\r"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner\r",
        "params": {
          "operator": "operator address which you want to query the approval of\r",
          "owner": "owner address which you want to query the approval of\r"
        },
        "return": "bool whether the given operator is approved by the given owner\r"
      },
      "name()": {
        "details": "Gets the token name\r",
        "return": "string representing the token name\r"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID\r",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of\r"
        },
        "return": "address currently marked as the owner of the given token ID\r"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address\r If the target address is a contract, it must implement `onERC721Received`,\r which is called upon a safe transfer, and return the magic value\r `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\r the transfer is reverted.\r Requires the msg.sender to be the owner, approved, or operator\r",
        "params": {
          "from": "current owner of the token\r",
          "to": "address to receive the ownership of the given token ID\r",
          "tokenId": "uint256 ID of the token to be transferred\r"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address\r If the target address is a contract, it must implement `onERC721Received`,\r which is called upon a safe transfer, and return the magic value\r `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\r the transfer is reverted.\r Requires the msg.sender to be the owner, approved, or operator\r",
        "params": {
          "_data": "bytes data to send along with a safe transfer check\r",
          "from": "current owner of the token\r",
          "to": "address to receive the ownership of the given token ID\r",
          "tokenId": "uint256 ID of the token to be transferred\r"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator\r An operator is allowed to transfer all tokens of the sender on their behalf\r",
        "params": {
          "approved": "representing the status of the approval to be set\r",
          "to": "operator address to set the approval\r"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table\r"
      },
      "symbol()": {
        "details": "Gets the token symbol\r",
        "return": "string representing the token symbol\r"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract\r Reverts if the index is greater or equal to the total number of tokens\r",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list\r"
        },
        "return": "uint256 token ID at the given index of the tokens list\r"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner\r",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list\r",
          "owner": "address owning the tokens list to be accessed\r"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address\r"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID\r Throws if the token ID does not exist. May return an empty string.\r",
        "params": {
          "tokenId": "uint256 ID of the token to query\r"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract\r",
        "return": "uint256 representing the total amount of tokens\r"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address\r Usage of this method is discouraged, use `safeTransferFrom` whenever possible\r Requires the msg.sender to be the owner, approved, or operator\r",
        "params": {
          "from": "current owner of the token\r",
          "to": "address to receive the ownership of the given token ID\r",
          "tokenId": "uint256 ID of the token to be transferred\r"
        }
      }
    },
    "title": "Full ERC721 Token\r This implementation includes all the required and some optional functionality of the ERC721 standard\r Moreover, it includes approve all functionality using operator terminology\r"
  },
  "userdoc": {
    "methods": {}
  }
}